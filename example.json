{
  "swagger": "2.0",
  "info": {
    "title": "generic.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/accounts/roles": {
      "post": {
        "summary": "List Roles",
        "operationId": "IndexRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcRolesListsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcIndexRolesRequest"
            }
          }
        ],
        "tags": [
          "AccountRoleService"
        ]
      }
    },
    "/api/v1/accounts/roles/create": {
      "post": {
        "summary": "Create a new role",
        "operationId": "CreateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcRoleResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcCreateRoleRequest"
            }
          }
        ],
        "tags": [
          "AccountRoleService"
        ]
      }
    },
    "/api/v1/accounts/roles/show": {
      "post": {
        "summary": "List Roles",
        "operationId": "ShowRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcRoleResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcIdRoleRequest"
            }
          }
        ],
        "tags": [
          "AccountRoleService"
        ]
      }
    },
    "/api/v1/accounts/roles/update": {
      "post": {
        "summary": "Delete Role",
        "operationId": "DeleteRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcRoleBoolResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcIdRoleRequest"
            }
          }
        ],
        "tags": [
          "AccountRoleService"
        ]
      }
    },
    "/api/v1/accounts/users": {
      "post": {
        "summary": "IndexUsers",
        "operationId": "IndexUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUsersListsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcIndexUsersRequest"
            }
          }
        ],
        "tags": [
          "AccountUserService"
        ]
      }
    },
    "/api/v1/accounts/users/changepassword": {
      "post": {
        "summary": "ChangePassword",
        "operationId": "ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUserBoolResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "AccountUserService"
        ]
      }
    },
    "/api/v1/accounts/users/create": {
      "post": {
        "summary": "Create User Traditionally",
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcCreateUserRequest"
            }
          }
        ],
        "tags": [
          "AccountUserService"
        ]
      }
    },
    "/api/v1/accounts/users/device/create": {
      "post": {
        "summary": "CreateDevice",
        "operationId": "CreateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUserBoolResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcNewDeviceRequest"
            }
          }
        ],
        "tags": [
          "AccountUserService"
        ]
      }
    },
    "/api/v1/accounts/users/device/update": {
      "post": {
        "summary": "UpdateDevice",
        "operationId": "UpdateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUserBoolResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUpdateDeviceRequest"
            }
          }
        ],
        "tags": [
          "AccountUserService"
        ]
      }
    },
    "/api/v1/accounts/users/login": {
      "post": {
        "summary": "LoginUser Traditionally",
        "operationId": "LoginUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUserLoginResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcLoginUserRequest"
            }
          }
        ],
        "tags": [
          "AccountUserService"
        ]
      }
    },
    "/api/v1/accounts/users/logout": {
      "post": {
        "summary": "Logout",
        "operationId": "Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUserBoolResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcTokenUserAuthRequest"
            }
          }
        ],
        "tags": [
          "AccountUserService"
        ]
      }
    },
    "/api/v1/accounts/users/newaccesstoken": {
      "post": {
        "summary": "GenerateNewAccessToken",
        "operationId": "GenerateNewAccessToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUserLoginResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcTokenUserAuthRequest"
            }
          }
        ],
        "tags": [
          "AccountUserService"
        ]
      }
    },
    "/api/v1/accounts/users/register-auth": {
      "post": {
        "summary": "Create/Update and login User by Auth0",
        "operationId": "CreateAndLoginUserAuth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcCreateAndLoginUserResponse"
            }
          }
        },
        "tags": [
          "AccountUserService"
        ]
      }
    },
    "/api/v1/accounts/users/resendcode": {
      "post": {
        "summary": "ResendSmsCode to activation of traditional account",
        "operationId": "ResendSmsCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUserBoolResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcResendSmsCodeRequest"
            }
          }
        ],
        "tags": [
          "AccountUserService"
        ]
      }
    },
    "/api/v1/accounts/users/sendcode": {
      "post": {
        "summary": "Activate traditional account",
        "operationId": "UpdateSmsStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUpdateSmsStatusRequest"
            }
          }
        ],
        "tags": [
          "AccountUserService"
        ]
      }
    },
    "/api/v1/accounts/users/status/update": {
      "post": {
        "summary": "UpdateUserStatusRequest",
        "operationId": "UpdateUserStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUserBoolResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcUpdateUserStatusRequest"
            }
          }
        ],
        "tags": [
          "AccountUserService"
        ]
      }
    },
    "/api/v1/accounts/users/validatetoken": {
      "post": {
        "summary": "ValidateToken",
        "operationId": "ValidateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcTokenUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rewardzshopsvcTokenUserAuthRequest"
            }
          }
        ],
        "tags": [
          "AccountUserService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rewardzshopsvcAccountStatus": {
      "type": "string",
      "enum": [
        "ACCOUNTS_INACTIVE",
        "ACCOUNTS_ACTIVE",
        "ACCOUNTS_DISCONTINUED",
        "ACCOUNTS_REMOVED",
        "ACCOUNTS_SUCCESS",
        "ACCOUNTS_PENDING",
        "ACCOUNTS_ERROR",
        "ACCOUNTS_WARNING"
      ],
      "default": "ACCOUNTS_INACTIVE"
    },
    "rewardzshopsvcChangePasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "rewardzshopsvcCreateAndLoginData": {
      "type": "object",
      "properties": {
        "tokens": {
          "$ref": "#/definitions/rewardzshopsvcTokenResponse"
        },
        "data": {
          "$ref": "#/definitions/rewardzshopsvcUser"
        }
      }
    },
    "rewardzshopsvcCreateAndLoginUserResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        },
        "data": {
          "$ref": "#/definitions/rewardzshopsvcCreateAndLoginData"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/rewardzshopsvcErrorMessage"
        }
      }
    },
    "rewardzshopsvcCreateRoleRequest": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/rewardzshopsvcRole"
        }
      },
      "title": "Request methods"
    },
    "rewardzshopsvcCreateUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phonenumber": {
          "type": "string"
        }
      }
    },
    "rewardzshopsvcDevice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "adKey": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "device": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        }
      }
    },
    "rewardzshopsvcErrorMessage": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "rewardzshopsvcIdRoleRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "rewardzshopsvcIndexRoleResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rewardzshopsvcRole"
          }
        },
        "paging": {
          "$ref": "#/definitions/rewardzshopsvcPagingSubResponse"
        }
      }
    },
    "rewardzshopsvcIndexRolesRequest": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "rewardzshopsvcIndexUsersRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/protobufAny"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "rewardzshopsvcIndexUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rewardzshopsvcUser"
          }
        },
        "paging": {
          "$ref": "#/definitions/rewardzshopsvcPagingSubResponse"
        }
      }
    },
    "rewardzshopsvcLoginUserRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "rewardzshopsvcNewDeviceRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "device": {
          "$ref": "#/definitions/rewardzshopsvcDevice"
        }
      }
    },
    "rewardzshopsvcPagingSubResponse": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalResults": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "rewardzshopsvcPreference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        }
      }
    },
    "rewardzshopsvcResendSmsCodeRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "rewardzshopsvcRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        }
      }
    },
    "rewardzshopsvcRoleBoolResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        },
        "data": {
          "type": "boolean",
          "format": "boolean"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/rewardzshopsvcErrorMessage"
        }
      }
    },
    "rewardzshopsvcRoleResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        },
        "data": {
          "$ref": "#/definitions/rewardzshopsvcRole"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/rewardzshopsvcErrorMessage"
        }
      },
      "title": "Response methods"
    },
    "rewardzshopsvcRolesListsResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        },
        "data": {
          "$ref": "#/definitions/rewardzshopsvcIndexRoleResponse"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/rewardzshopsvcErrorMessage"
        }
      }
    },
    "rewardzshopsvcTokenClaims": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "authUserId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        }
      }
    },
    "rewardzshopsvcTokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "rewardzshopsvcTokenUserAuthRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "rewardzshopsvcTokenUserResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        },
        "data": {
          "$ref": "#/definitions/rewardzshopsvcTokenClaims"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/rewardzshopsvcErrorMessage"
        }
      }
    },
    "rewardzshopsvcUpdateDeviceRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        }
      }
    },
    "rewardzshopsvcUpdateSmsStatusRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "device": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "adKey": {
          "type": "string"
        },
        "operating_system": {
          "type": "string"
        }
      }
    },
    "rewardzshopsvcUpdateUserStatusRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        }
      }
    },
    "rewardzshopsvcUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "walletId": {
          "type": "string"
        },
        "device": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rewardzshopsvcDevice"
          }
        },
        "phonenumber": {
          "type": "string"
        },
        "isSocial": {
          "type": "boolean",
          "format": "boolean"
        },
        "picture": {
          "type": "string"
        },
        "auth0Id": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        },
        "preference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rewardzshopsvcPreference"
          }
        }
      }
    },
    "rewardzshopsvcUserBoolResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        },
        "data": {
          "type": "boolean",
          "format": "boolean"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/rewardzshopsvcErrorMessage"
        }
      }
    },
    "rewardzshopsvcUserLoginResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        },
        "data": {
          "$ref": "#/definitions/rewardzshopsvcTokenResponse"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/rewardzshopsvcErrorMessage"
        }
      }
    },
    "rewardzshopsvcUserResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        },
        "data": {
          "$ref": "#/definitions/rewardzshopsvcUser"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/rewardzshopsvcErrorMessage"
        }
      }
    },
    "rewardzshopsvcUsersListsResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/rewardzshopsvcAccountStatus"
        },
        "data": {
          "$ref": "#/definitions/rewardzshopsvcIndexUsersResponse"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/rewardzshopsvcErrorMessage"
        }
      }
    }
  }
}
